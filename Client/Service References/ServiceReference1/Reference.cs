//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceExample")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int M1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int M2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int M3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int M1 {
            get {
                return this.M1Field;
            }
            set {
                if ((this.M1Field.Equals(value) != true)) {
                    this.M1Field = value;
                    this.RaisePropertyChanged("M1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int M2 {
            get {
                return this.M2Field;
            }
            set {
                if ((this.M2Field.Equals(value) != true)) {
                    this.M2Field = value;
                    this.RaisePropertyChanged("M2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int M3 {
            get {
                return this.M3Field;
            }
            set {
                if ((this.M3Field.Equals(value) != true)) {
                    this.M3Field = value;
                    this.RaisePropertyChanged("M3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HelloWorld", ReplyAction="http://tempuri.org/IService1/HelloWorldResponse")]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HelloWorld", ReplyAction="http://tempuri.org/IService1/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetName", ReplyAction="http://tempuri.org/IService1/GetNameResponse")]
        string GetName(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetName", ReplyAction="http://tempuri.org/IService1/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverage", ReplyAction="http://tempuri.org/IService1/GetAverageResponse")]
        string GetAverage(int M1, int M2, int M3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverage", ReplyAction="http://tempuri.org/IService1/GetAverageResponse")]
        System.Threading.Tasks.Task<string> GetAverageAsync(int M1, int M2, int M3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMax", ReplyAction="http://tempuri.org/IService1/GetMaxResponse")]
        int GetMax(int[] ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMax", ReplyAction="http://tempuri.org/IService1/GetMaxResponse")]
        System.Threading.Tasks.Task<int> GetMaxAsync(int[] ar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoesStudentPass", ReplyAction="http://tempuri.org/IService1/DoesStudentPassResponse")]
        string DoesStudentPass(Client.ServiceReference1.Student S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoesStudentPass", ReplyAction="http://tempuri.org/IService1/DoesStudentPassResponse")]
        System.Threading.Tasks.Task<string> DoesStudentPassAsync(Client.ServiceReference1.Student S);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference1.IService1>, Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string GetName(string Name) {
            return base.Channel.GetName(Name);
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync(string Name) {
            return base.Channel.GetNameAsync(Name);
        }
        
        public string GetAverage(int M1, int M2, int M3) {
            return base.Channel.GetAverage(M1, M2, M3);
        }
        
        public System.Threading.Tasks.Task<string> GetAverageAsync(int M1, int M2, int M3) {
            return base.Channel.GetAverageAsync(M1, M2, M3);
        }
        
        public int GetMax(int[] ar) {
            return base.Channel.GetMax(ar);
        }
        
        public System.Threading.Tasks.Task<int> GetMaxAsync(int[] ar) {
            return base.Channel.GetMaxAsync(ar);
        }
        
        public string DoesStudentPass(Client.ServiceReference1.Student S) {
            return base.Channel.DoesStudentPass(S);
        }
        
        public System.Threading.Tasks.Task<string> DoesStudentPassAsync(Client.ServiceReference1.Student S) {
            return base.Channel.DoesStudentPassAsync(S);
        }
    }
}
